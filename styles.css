* {
  font-family: verdana;
  margin: 0;
}

body {
  background: #eee;
}

.wrapper {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

/*
  adding a 'display:flex' property to a 'flex container' will give a lot of
  flexibility to the direct children residing inside the 'flex container'.
  This direct childrens are then called 'flex items' and these childrens will
  automatically be floated and also we dont have to clearfix the parent element
  which we have to do when we use 'float' property with the 'child elements'...
*/
/*
  whenever the element's width reaches to 200px as we have set the 'min-width:200px'
  for each element, the elements do not shrink anymore. As a result elements go
  outside the browser and we need to scroll horizontally to view those elements.
  To avoid these situations we can use 'flex-wrap:wrap/wrap-reverse' so that
  the element that cannot fit in the browser view goes to another line(goes down
  for 'wrap' and goes up for 'wrap-reverse')...
*/
.flex-container {
  display: flex;
  background-color: #fff;
  flex-wrap: wrap;
}

/*
  when the browser is shrinked to less than 500px then the elements cannot be
  shrinked anymore if the 'min-width' is set to 500px for each element, to see
  the full element we need to scroll horizontally. But if we add 'flex-basis:500px'
  instead of 'min-width:500px' then even though the browser is shrinked less than
  500px, the horizontal scrollbar will not be displayed because the element will
  be shrinked(less than 500px) too to fit in the browser view...
*/
.box {
  height: 100px;
  /* min-width: 500px; */
  flex-basis: 500px;
}

.one {
  background-color: red;
}

.two {
  background-color: blue;
}

.three {
  background-color: green;
}
