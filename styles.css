* {
  font-family: verdana;
  margin: 0;
}

body {
  background: #eee;
}

.wrapper {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
}

/*
  adding a 'display:flex' property to a 'flex container' will give a lot of
  flexibility to the direct children residing inside the 'flex container'.
  This direct childrens are then called 'flex items' and these childrens will
  automatically be floated and also we dont have to clearfix the parent element
  which we have to do when we use 'float' property with the 'child elements'...
*/
.flex-container {
  display: flex;
  background-color: #fff;
}

.box {
  height: 100px;
  min-width: 100px;
}
/*
  'flex-grow' enables an element to expand with the given rate but it will expand
  keeping consistency with the growth rate of the relative elements of that
  particular element but when the browser gets shrinked to 300px all the elements
  will be 100px and elements will not follow 'flex-grow' property anymore as
  'min-width:100px' is given to all the elements...
*/
.one {
  background-color: red;
  /* will take 4 cols */
  flex-grow: 4;
}

.two {
  background-color: blue;
  /* will take 6 cols */
  flex-grow: 6;
}

.three {
  background-color: green;
  /* will take 2 cols */
  flex-grow: 2;
}
